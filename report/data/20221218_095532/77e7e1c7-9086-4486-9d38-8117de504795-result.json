{"name": "test002", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\"id='sb_form_q'\")\n============================================================", "trace": "uicases = {'test002': {'descrption': '验证错误的密码登录京东失败-提示账号名与密码不匹配，请重新输入2', 'expect_result': '账号名与密码不匹配，请重新输入2', 'test_account': 'test_account20221212', 'test_passwd': '123', ...}}\npage = <Page url='https://cn.bing.com/'>\n\n    def test_case(uicases, page: Page):\n        caseno = list(uicases.keys())[0]\n        descrption = dict(list(uicases.values())[0])[\"descrption\"]\n        test_account = dict(list(uicases.values())[0])[\"test_account\"]\n        test_passwd = dict(list(uicases.values())[0])[\"test_passwd\"]\n        test_step = list(uicases.values())[0][\"test_step\"]\n        expect_result = dict(list(uicases.values())[0])[\"expect_result\"]\n        allure_title(caseno)\n        allure_step_no(f'descrption:{descrption}')\n        allure_step_no(f'test_step:{str(test_step)}')\n        allure_step_no(f'expect_result:{expect_result}')\n        i =1\n        for k, v in test_step.items():\n            if k == \"open\":\n                url = test_step[\"open\"]\n                page_open(page, url=url)\n            elif k == f\"click{i}\":\n                selector = test_step[f\"click{i}\"]\n                page_element_click(page=page, selector=selector)\n            elif k == f\"fill{i}\":\n                selector = test_step.get(f\"fill{i}\")[\"selector\"]\n                vaule = test_step.get(f\"fill{i}\")[\"vaule\"]\n>               page_element_input_fill(page=page, selector=selector, value=vaule)\n\ntest_case\\UI\\test_ui.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\home.py:29: in page_element_input_fill\n    page.fill(selector=selector, value=value)\nvenv\\lib\\site-packages\\playwright\\sync_api\\_generated.py:9169: in fill\n    self._sync(\nvenv\\lib\\site-packages\\playwright\\_impl\\_page.py:740: in fill\n    return await self._main_frame.fill(**locals_to_params(locals()))\nvenv\\lib\\site-packages\\playwright\\_impl\\_frame.py:528: in fill\n    await self._channel.send(\"fill\", locals_to_params(locals()))\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:44: in send\n    return await self._connection.wrap_api_call(\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:419: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Channel object at 0x000001862AF45130>, method = 'fill'\nparams = {'selector': \"id='sb_form_q'\", 'value': 'test_account20221212'}, return_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.\nE       =========================== logs ===========================\nE       waiting for locator(\"id='sb_form_q'\")\nE       ============================================================\n\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:79: TimeoutError"}, "steps": [{"name": "descrption:验证错误的密码登录京东失败-提示账号名与密码不匹配，请重新输入2", "status": "passed", "start": 1671328542958, "stop": 1671328542958}, {"name": "test_step:{'open': 'https://cn.bing.com/', 'fill1': {'selector': \"id='sb_form_q'\", 'vaule': 'test_account20221212'}}", "status": "passed", "start": 1671328542958, "stop": 1671328542959}, {"name": "expect_result:账号名与密码不匹配，请重新输入2", "status": "passed", "start": 1671328542959, "stop": 1671328542959}, {"name": "打开-https://cn.bing.com/", "status": "passed", "start": 1671328542959, "stop": 1671328542959}, {"name": "元素-id='sb_form_q',填充文本-test_account20221212", "status": "passed", "start": 1671328546396, "stop": 1671328546397}], "parameters": [{"name": "uicases", "value": "{'test002': {'descrption': '验证错误的密码登录京东失败-提示账号名与密码不匹配，请重新输入2', 'test_account': 'test_account20221212', 'test_passwd': '123', 'test_step': {'open': 'https://cn.bing.com/', 'fill1': {'selector': \"id='sb_form_q'\", 'vaule': 'test_account20221212'}}, 'expect_result': '账号名与密码不匹配，请重新输入2'}}"}, {"name": "browser_name", "value": "'chromium'"}], "start": 1671328542957, "stop": 1671328576417, "uuid": "263ae1b3-018f-4c2e-b30d-10900577698a", "historyId": "87002ed439629bbac05f1bd39f2707d0", "testCaseId": "440d07c10be86bae80f74a1275158dde", "fullName": "test_case.UI.test_ui#test_case", "labels": [{"name": "parentSuite", "value": "test_case.UI"}, {"name": "suite", "value": "test_ui"}, {"name": "host", "value": "KTECH00049"}, {"name": "thread", "value": "14868-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.UI.test_ui"}]}